AC_INIT([LibMary], [0.1])

PKG_CHECK_MODULES(THIS, [glib-2.0 >= 2.0, gthread-2.0 >= 2.0, gmodule-2.0 >= 2.0])
AC_SUBST(THIS_CFLAGS)
AC_SUBST(THIS_LIBS)

AM_INIT_AUTOMAKE([1.7 gnu nostdinc])

AC_PROG_CC
AC_PROG_CXX
AC_LIBTOOL_WIN32_DLL
AC_PROG_LIBTOOL

case "$host" in
  *-*-mingw*|*-*-cygwin*)
    platform_win32=yes
    ;;
  *)
    platform_win32=no
    ;;
esac
AM_CONDITIONAL(PLATFORM_WIN32, test x$platform_win32 = xyes)

AC_ARG_ENABLE([epoll],
	      AC_HELP_STRING([--disable-epoll],
			     [Disable epoll]),
	      [enable_epoll=$enableval],
	      [enable_epoll="yes"])
AM_CONDITIONAL(LIBMARY_ENABLE_EPOLL, test "x$enable_epoll" = "xyes")
if test "x$enable_epoll" = "xyes"; then
    AC_DEFINE([LIBMARY_ENABLE_EPOLL], [1], [ ])
fi

AC_ARG_WITH([select],
	    AC_HELP_STRING([--with-select=@<:@yes/no@:>@],
			   [Use select() syscall for event polling by default [default=no]]),
	    [with_select=$withval],
	    [with_select="no"])
#AM_CONDITIONAL(LIBMARY_USE_SELECT, test x$with_select = xyes)
if test "x$with_select" = "xyes"; then
    AC_DEFINE([LIBMARY_USE_SELECT], [1], [ ])
fi

# local_config.h is for local configuration and should not be used in external
# headers. Every libmary source file (*.cpp, *.c) must #include "config.h"
#
# libmary_config.h is for external configuration and should be included
# by external headers when necessary.
#
touch libmary_config.h.in
AC_CONFIG_HEADERS([local_config.h libmary/libmary_config.h])

AC_CONFIG_FILES([Makefile
		 libmary/Makefile
		 libmary-1.0.pc])
AC_OUTPUT

